var store = [{
        "title": "App Technologies",
        "excerpt":"Since 10 years we have seen a lot of cross-plateform technologies.  Every time, there is some reasons to select an alternative technology.      Reduce the cost of the App   Use the internal resources to develop the App   Recruitment too complex   For several years, we the maturity of some challengers, i was wondering if I was missing something.  That’s why i have made this analyses of the AppStore.   The alternatives are :     Native (Apple)   React Native (Facebook)   Flutter (Google)   Cordova (Adobe Systems)   Xamarin (Microsoft)   We have collected the analysis of 3334 apps                  Syntax       Number of Apps       %                       Native       2494       75%                 React Native       420       12%                 Flutter       159       5%                 Cordova       107       3%                 xamarin       34       1%                 Web       120       3%           This picture of the store is interesting!     Native development is dominating.   At least 25% of the Apps of the AppStore are not native!   2 technologies are dominating Flutter &amp; React Native.   React Native is adopted 2x more than Flutter.  ","categories": ["AppStore","Cross Platform","Flutter","React Native"],
        "tags": ["Xamarin","React Native","Cordova","Web App","Flutter","Native"],
        "url": "/appscan-appstore-technologies.html",
        "teaser": null
      },{
        "title": "AppScore - definition",
        "excerpt":"why?  We have created an AppScore :     To be more objective to judge a App   Detect strenghts and the weaknesses of the App.   Be able to compare Apps   AppScore computation is the sum of multiple scores:   App environment - Xcode version can be detected. It’s interesting to see the adoption of the most recent version of Xcode to adapt the App to new iOS features.   Technology use for the development - Major technology used for the App development, can be evaluated using some packaging hints.   App minimal iOS version - Give an estimation of the reachable number of devices   App size - Tt’s big or not? And detect why   App permissions - Give an interesting smelling of the possible features of the App   App supported languages - Give a best vision of the targeted users   App resources - Discover some optimizations and packaging errors   App librairies - Super tech vision of the App Technical Stack and guessing some features and the strategy of development   App security - God dam shit   App - interactions with other Apps - Users like to have their preferences considered   App - interactions with the iOS system - Yeah! Very good points to be loved by Apple and maybe the Users  ","categories": ["AppStore","AppScore"],
        "tags": [],
        "url": "/appscan-appscore.html",
        "teaser": null
      },{
        "title": "AppScan - data collection",
        "excerpt":"I started to work on that project some years ago. I was working another project RocketSkill, a quizz App for the tech recruiters.  I was trying to aggregate lot of data to get a global vision of the AppStore and give some recommandations to new iOS developers.   What libraries are important to know? How to improve my learning curve on the platform?   After some months, i was able to generate a first list of frameworks sorted by usage of the AppStore.  This was already funny to discover some new frameworks using this method.   Finally, i decided to continue my research about the ipa structure &amp; organizations and to conclude i made the AppScan tool, to collect &amp; organize the App data.      Environment            Xcode version       Service env urls       App technology           App configuration            Apple Info.plist Keys       Extra Info.plist Keys       Permissions           Resources            Assets missing 1x 2x 3x       Assets organization       Languages supports       ThirdParty librairies       Apple librairies           Security            risky files       Bad configurations       Bad environments       Schemes           Extra features            Extensions       Entitlemented features       Cool Apple featured SDK : ARKit, SwiftUI           ","categories": ["AppStore","Product"],
        "tags": ["ipa","scan"],
        "url": "/appscan-data-collect.html",
        "teaser": null
      },{
        "title": "Apple Transport Security or not",
        "excerpt":"On iOS, the network exchanges is an important layer of the security.   This layer is used by the App when performing network requests with :     URLSession,   URLConnection,   WKWebView loading,   Thirdparty librairies (Alamofire, AFNetworking)   Using our current database we have discovered that 48% of the iOS app have remove or disable this protection.     ","categories": ["AppStore","Security"],
        "tags": ["NSAllowsArbitraryLoads","NSAppTransportSecurity"],
        "url": "/appscan-appstore-AppTransportSecurity.html",
        "teaser": null
      },{
        "title": "Crypto Apps - Benchmark - Part 1 - Introduction",
        "excerpt":"Apps relative to crypto are very recent and now common on the AppStore.  We wanted to study those Apps to make an smart article about technical stacks &amp; good practices.   What are the good things?   What are the bad things in those about?   What are the important points if you want to start to build a new App?   To study those questions we have decided to take the most trendy applications and to compare them on technical aspects :                  App name       BundleID       version                        MetaMask - Blockchain Wallet       ee.mtakso.client       65.1                  FTX (Blockfolio)       com.blockfolio.blockfolio       4.10.5                  CoinMarketCap       com.coinmarketcap.CoinMarketCap       4.2.0                  Coinbase: Buy Bitcoin &amp; Ether       com.vilcsak.bitcoin2       10.29.4                  Crypto.com  - Buy Bitcoin, ETH       co.mona.Monaco       3.143                  Binance: Buy Bitcoin &amp; Crypto       com.czzhao.binance       2.50.0                  ZenGo: Crypto &amp; Bitcoin Wallet       kzencorp.mobile.ios       4.1.2                  eToro Money       com.etoro.wallet       48.0.0           This article is the one a serie :     👉 Part 1 - Introduction   Part 2 - Resources   Part 3 - Interactions   Part 4 - Security   TLDR;      There is native Apps and Apps developed using a cross plateform solutions.   All Apps can provide a very rich User Experience and extends the system using App Extensions or interact with other Apps to improve the journey of a User.   The applications are characterized by the number of interactions with the system and the possible interactions with other Apps.   The packaging is really different depending on the technology of the application and this leads to resources not optimized and some security weaknesses.   AppScores   AppScore give an objective &amp; synthetic vision of any Apps, just by focusing on quality criteria.  If you want to get more details about AppScore computation                  App       AppScore                        MetaMask - Blockchain Wallet       4.77                  FTX (Blockfolio)       4.14                  CoinMarketCap       4.14                  Coinbase: Buy Bitcoin &amp; Ether       4.05                  Crypto.com  - Buy Bitcoin, ETH       4.00                  Binance: Buy Bitcoin &amp; Crypto       3.95                  ZenGo: Crypto &amp; Bitcoin Wallet       3.64                  eToro Money       3.41              MetaMask is clearly over the other apps   Technologies   The technologies is evaluated using multiple hints inside the App bundle.                  App       Technology                        Crypto.com - Buy Bitcoin, ETH       Native                  MetaMask - Blockchain Wallet       Native                  Binance: Buy Bitcoin &amp; Crypto       Native &amp; Flutter                  CoinMarketCap       Flutter                  ZenGo: Crypto &amp; Bitcoin Wallet       Reach Native                  Coinbase: Buy Bitcoin &amp; Ether       Reach Native                  FTX (anciennement Blockfolio)       Reach Native                  eToro Money       Web              A lot af alternative technologies are used   Native is not the most common implementation   3 React Native Apps and 2 Flutter Apps   Minimal iOS version                  App       Minimal iOS version                        ZenGo: Crypto &amp; Bitcoin Wallet       11.0                  eToro Money       11.0                  CoinMarketCap       11.0                  FTX (anciennement Blockfolio)       11.0                  Coinbase: Buy Bitcoin &amp; Ether       12.0                  Binance: Buy Bitcoin &amp; Crypto       12.0                  MetaMask - Blockchain Wallet       12.0                  Crypto.com - Buy Bitcoin, ETH       13.0              Crypto.com requires iOS 13.0 which is not a bad idea but you loose some % of devices   App Size   App size is important to be able to be easyly installed and not to limited because of the network.  And not be the 1st application uninstalled if the device has less space.                  App       Size                        FTX (anciennement Blockfolio)       28 Mb                  ZenGo: Crypto &amp; Bitcoin Wallet       56 Mb                  Coinbase: Buy Bitcoin &amp; Ether       66 Mb                  CoinMarketCap       70 Mb                  eToro Money       79 Mb                  MetaMask - Blockchain Wallet       117 Mb                  Crypto.com - Buy Bitcoin, ETH       246 Mb                  Binance: Buy Bitcoin &amp; Crypto       540 Mb              Binance, why is it so big?            a lootttt of assets in a lot of internal frameworks.           Crypto.com,  why is it so big?            lot of assets (of big assets) … maybe time to migrate to more vectorial integrations           ","categories": ["Audits","Benchmark","AppScore"],
        "tags": ["AppSize","Native","Xamarin","Flutter","React Native"],
        "url": "/appscan-crypto-apps-part-1-introduction.html",
        "teaser": null
      },{
        "title": "Crypto Apps - Benchmark - Part 2 - Resources",
        "excerpt":"Apps relative to crypto are very recent.  We wanted to study those Apps to make an smart article about technical stacks &amp; good practices.   What are the good things?   What are the bad things in those about?   What are the important points if you want to start to build a new App?   To study those questions we have decided to take the most trendy applications and to compare them on technical aspects   This article is the second of the serie :     Part 1 - Introduction   👉 Part 2 - Resources   Part 3 - Interactions   Part 4 - Security   TLDR;      There is native Apps and Apps developed using a cross plateform solutions.   All Apps can provide a very rich User Experience and extends the system using App Extensions or interact with other Apps to improve the journey of a User.   The applications are characterized by the number of interactions with the system and the possible interactions with other Apps.   The packaging is really different depending on the technology of the application and this leads to resources not optimized and some security weaknesses.   App Resources   In this section, we check to important metrics about the packaging of the App.     How are managed the images? package in Assets? to be optimized by Apple on the App installation, or not?   How is configured the language support? Permissions are well localized? Is there missing values?                  App       AppScore       Details                                MetaMask - Blockchain Wallet       6       ✅ 40 languages✅ Plurals management ✅ Images packaged in assets                             Binance: Buy Bitcoin &amp; Crypto       5       ✅ 9 languages❌ Localized strings Custom Flutter (JSON file) ✅ Images packaged in assets                             Crypto.com - Buy Bitcoin, ETH       4.5       ✅ 20 languages❌ Some missing translations detected  ✅ Images packaged in assets                             CoinMarketCap       4.5       ✅ 21 languages❌ Some missing translations detected  ✅ Images packaged in assets                             Coinbase: Buy Bitcoin &amp; Ether       3       ✅ 18 languages❌ images not optimized in assets ❌ @1x/2x/@3x❌ image scales missing                          FTX (anciennement Blockfolio)       2.5       ✅ 18 languages❌ images not optimized in assets ❌ @1x/2x/@3x❌ image scales missing                          ZenGo: Crypto &amp; Bitcoin Wallet       2.5       ❌ 1 language❌ images not optimized in assets ❌ @1x/2x/@3x                          eToro Money       2.5       ❌ no official language declared (but custom in App) ❌ images not optimized in assets ❌ @1x/2x/@3x                   ","categories": ["Audits","Benchmark","App Resources"],
        "tags": ["assets","strings","stringDict","languages","lproj"],
        "url": "/appscan-crypto-apps-part-2-resources.html",
        "teaser": null
      },{
        "title": "Crypto Apps - Benchmark - Part 3 - Interactions",
        "excerpt":"Apps relative to crypto are very recent.  We wanted to study those Apps to make an smart article about technical stacks &amp; good practices.   What are the good things?   What are the bad things in those about?   What are the important points if you want to start to build a new App?   To study those questions we have decided to take the most trendy applications and to compare them on technical aspects :   This article is the third of the serie :     Part 1 - Introduction   Part 2 - Resources   👉  Part 3 - Interactions   Part 4 - Security   TLDR;      There is native Apps and Apps developed using a cross plateform solutions.   All Apps can provide a very rich User Experience and extends the system using App Extensions or interact with other Apps to improve the journey of a User.   The applications are characterized by the number of interactions with the system and the possible interactions with other Apps.   The packaging is really different depending on the technology of the application and this leads to resources not optimized and some security weaknesses.   App interactions   Interactions with other Apps   An app can interact with other Apps, but to do that the App must declare a list of Apps to interact with.  This list give the possibility to the App to ask to open the other Apps for specific actions.                  App       Number of apps       Social Apps       Mails Apps       Wallet Apps       Jailbreak Apps                        ZenGo: Crypto &amp; Bitcoin Wallet       6 apps       ❌       ✅       ❌       ❌                  Coinbase: Buy Bitcoin &amp; Ether       17 apps       ✅       ✅       ✅       ❌                  eToro Money       1 app       ✅       ❌       ❌       ❌                  Binance: Buy Bitcoin &amp; Crypto       5 apps       ❌       ❌       ✅       ❌                  CoinMarketCap       10 apps       ✅       ✅       ❌       ❌                  FTX (anciennement Blockfolio)       10 apps       ✅       ✅       ❌       ❌                  Crypto.com - Buy Bitcoin, ETH       5 apps       ❌       ✅       ❌       ✅                  MetaMask - Blockchain Wallet       5 apps       ✅       ❌       ❌       ❌              Yes, Mail Apps make sense to give the user a way to share things, and maybe optimize actions.   Social Apps (WhatsApp, Instagram, Facebook, Twitter), give the user a way to share content or to log.   Wallet Apps can be interesting to interact with (or to know that a User has alternative)   Cydia is a good idea to detect jailbroken devices and maybe limit the usage of the App.   Interactions with the system   Interactions with the system give your App a real sense for the Users and provide lots of way to interact with her.                  App       iCloud service       Universal links       Apple Pay       Wallet       Keychain group       Apple Sign In       NFC reader       web credentials                        Coinbase: Buy Bitcoin &amp; Ether       ✅       ✅       ✅       ✅       ✅       ❌       ❌       ✅                  MetaMask - Blockchain Wallet       ❌       ✅       ✅       ❌       ✅       ✅       ✅       ❌                  Binance: Buy Bitcoin &amp; Crypto       ✅       ✅       ❌       ❌       ✅       ✅       ✅       ✅                   ZenGo: Crypto &amp; Bitcoin Wallet       ✅       ✅       ❌       ❌       ❌       ❌       ❌       ❌                  eToro Money       ❌       ❌       ❌       ❌       ✅       ✅       ❌       ❌                  CoinMarketCap       ❌       ✅       ❌       ❌       ✅       ❌       ❌       ❌                  FTX (anciennement Blockfolio)       ❌       ✅       ❌       ❌       ✅       ✅       ❌       ❌                  Crypto.com - Buy Bitcoin, ETH       ❌       ✅       ✅       ❌       ✅       ❌       ❌       ❌              Universal links, most of those Apps declare universal links (the fact to redirect the User inside the App if we navigate to an url of the website)   Apple Pay, the App can do payment or transferts using ApplePay (it’s always better than having to give a Credit Card)   Wallet, only Coinbase has developped a Coinbase Card integrated to Wallet   Keychain group, a powerfull technology to store safely the data and share this with your other Apps &amp; extensions.   Apple Sign In, the Apple authentication process, only implemented by 50% of those Apps.   NFC Reader, interesting features linked to NFC scanning and probably some partners integration to the Apps.   Web Credentials, surprisly not the most implemented feature but very important to be able to share the User credentials with the web brower.   Integrations inside the system   The App extensions are external components to increase the App visibility on the system.                  App       Widget (old)       Widget(s)       Siri       ReplayKit       Notification service                        Binance: Buy Bitcoin &amp; Crypto       ✅       ✅       ✅       ✅       ❌                  CoinMarketCap       ❌       ✅       ✅       ❌       ✅                  Coinbase: Buy Bitcoin &amp; Ether       ❌       ✅       ✅       ❌       ❌                  FTX (anciennement Blockfolio)       ❌       ✅       ✅       ❌       ❌                 Crypto.com - Buy Bitcoin, ETH       ❌       ❌       ❌       ❌       ✅                  MetaMask - Blockchain Wallet       ❌       ❌       ❌       ❌       ✅                   ZenGo: Crypto &amp; Bitcoin Wallet       ❌       ❌       ❌       ❌       ❌                  eToro Money       ❌       ❌       ❌       ❌       ❌              OLD Widget, Binance is the only one to provivide this old version of the Widget for the lower iOS versions 👏.   new Widget, new SwiftUI widget. Cool to present some synthetic information withtout starting the App.   Siri, “hello Siri i want to do something”. You can talk to your device and present actions.   Notification Service, a service to improve the presentation of the content of the notifications for the user.   ReplayKit, interesting service (use only by Binance), probably to record/save some actions on device and your face for security reasons.  ","categories": ["Audits","Benchmark","App Interactions","System Interactions"],
        "tags": ["Scheme","Queried Scheme","App Extensions"],
        "url": "/appscan-crypto-apps-part-3-interactions.html",
        "teaser": null
      },{
        "title": "Crypto Apps - Benchmark - Part 4 - Security",
        "excerpt":"Apps relative to crypto are very recent.  We wanted to study those Apps to make an smart article about technical stacks &amp; good practices.   This article is the last of this serie :     Part 1 - Introduction   Part 2 - Resources   Part 3 - Interactions   👉 Part 4 - Security   App Security   The security score is actually evaluated by checking 3 things :     detect “risky” files inside the app bundle (something human readable that might contains important informations)   detect bad security configuration   detect api keys/token easy to hijack                  App       Security Score                        MetaMask - Blockchain Wallet       4 (5)                  Crypto.com  - Buy Bitcoin, ETH       4                  CoinMarketCap       4                  FTX (anciennement Blockfolio)       3                  ZenGo: Crypto &amp; Bitcoin Wallet       3                  Coinbase: Buy Bitcoin &amp; Ether       3                  eToro Money       3                  Binance: Buy Bitcoin &amp; Crypto       3           Risks due to the App configuration   Each Apps can adapt a very important security layer between the App and internet.  In this section, we scan the Apps NSAppTransportSecurity configuration.   Only 2 Apps don’t modify this security layer     MetaMask - Blockchain Wallet   Crypto.com  - Buy Bitcoin, ETH   The others Apps are reducing the App security using some parameters     NSAllowsArbitraryLoads : A Boolean value indicating whether App Transport Security restrictions are disabled for all network connections.   NSAllowsLocalNetworking : A Boolean value indicating whether to allow loading of local resources.   NSAllowsArbitraryLoadsInWebContent : A Boolean value indicating whether all App Transport Security restrictions are disabled for requests made from web views.   NSExceptionAllowsInsecureHTTPLoads : A Boolean value indicating whether to allow insecure HTTP loads.   Risky keys/values   Some places inside the App are protected and not easy to read (for exemple the executable element of the App).  In a lot of Apps, we can detect some important keys/values not stored at the right place.   Only 3 Apps are not storing critical value in a low security environement     MetaMask - Blockchain Wallet   CoinMarketCap   FTX (anciennement Blockfolio)   Risky files   An package App is not so complicatd to get and to inspect.  The packaging is not a good protection because an App package is just a zip file 🤯.  AppScan analyse the entire content of the package :     Main bundle,   Each bundles,   Each librairies, frameworks,   All files in the App.   The idea is to detect files that can contains infomrations in a more or less readable format.  All those files with extensions has been detected in the Apps.      .cer, .der, those files are certificates, probably to if the server is really the real server   .xml, .yml, data files, fully readdable, we can get lot of informations exploring them   .json, fully readdable, we can get lot of informations exploring them   .xcconfig, really not a normal place in an App … it’s a configuration file for Xcode   .md, .txt, text files … sometimes readMe, release notes, etc   .js, yes, some JS files can be very interesting and contains lot of data.   Conclusion      MetaMask is over the other, we only detect some .cer &amp; .der files which can be usefull for security validation   Lot of Apps are exposing apiKeys &amp; critical tokens inside readable sources (Info.plist for example)   Too much Apps are updating the NSAppTransportSecurity … this parameter reduce the App security   I would consider Apps to be more secure because alternatives create more data inside “readable” format (.json, .txt, .js, .yml). Those files can contains important data.  ","categories": ["Audits","Benchmark","Security"],
        "tags": ["Security","NSAppTransportSecurity"],
        "url": "/appscan-crypto-apps-part-4-security.html",
        "teaser": null
      },{
        "title": "AppStore schemes database",
        "excerpt":"On September 2022, AppScan has scanned more that 5000 Apps in the most top ranked.  Finally, we decided to build a schemes database &amp; to published somes of our discoveries.   App Schemes   App schemes give a way to open your App using a custom declared scheme.   What is a Scheme   A URL (Uniform Resource Locator) is a unique identifier used to locate a resource.  URLs consist of multiple parts – including a protocol and domain name – that tell a web browser how and where to retrieve a resource.   The documentation of Apple is pretty simple :     Yes, you can expose custom Scheme to allow other Apps to trigger your app   But it’s bad in terms of security   Warning  URL schemes offer a potential attack vector into your app, so make sure to validate all URL parameters and discard any malformed URLs.  In addition, limit the available actions to those that don’t risk the user’s data.  For example, don’t allow other apps to directly delete content or access sensitive information about the user.  When testing your URL-handling code, make sure your test cases include improperly formatted URLs.   So, you can declare a custom scheme and your app will be open if someome click on a link openMyAwesomeApp://  openMyAwesomeApp://   but everybody is able to register this, so i can create my hijacking App and declare the same custom scheme and my application can be opened instead of yours.   On September 2022, AppScan database contains 5665 Apps, we compiled the App declared public schemes to illustrate the problems and the schemes usage.   Some metrics about our iOS Schemes database      30 schemes are used more that 5 times.   347 schemes are used more that one time,   13932 unique schemes,   iOS top hijacked Schemes                  Schemes       number of apps                 prefs       153                 https       28                 capacitor       23                 http       22                 kindle       17                 tel       17                 mailto       17                 sms       16                 bma4sreceiver       14                 appcenter-       12                 expapp000       12                 App-Prefs       10                 app       8                 otpauth       8                 amazonmobile       8                 org-appextension-feature-password-management       8                 twitterkit-bqNRNye1eU89E7gVP5aam6O6t       7                 com.googleusercontent.apps.       7                 oauth-swift       6                 twitterkit-8WIpExNRasgkylPREYlfqweEg       6                 com.apple.maps.action       6                 twitterkit-szwcBj2lCk6nxhm8T6rXj4nc6       6                 ssh       6                 bitcoin       5           So what?           😋 It’s funny, on average, applications declare more than 2 custom URL Schemes. It’s not so incredible, if we look deeper inside, multiple time it’s explained by the external login process of Facebook, Twitter, etc, because you have to expose an entry to be called back by the third party oauth.            😤 What is very concerning in the fact that 347 schemes are used by multiple Apps, so be aware than trying to open an App using a URL scheme doesn’t guaranty you to open that App. It’s a random process.            😵‍💫 Some Apple schemes are supposed to be private … i don’t know why Apple doesn’t reject those Apps       😡 More concerning, some schemes are really not recommended            those 30 ones overused       the 347 hijacked (if you are not sure that your App is the one opened…)                🤬 Some schemes are very close of the system : https://, http://, prefs://, tel://, sms://` and i’m not sure there is a desire of Apple to open them on the system (not as the mailto://)       🍏 Even more for Public “Security” scheme org-appextension-feature-password-management:// … Is it normal for Apple to allow this kind of thing?  ","categories": ["AppStore","AppScan","Database","Scheme","Security"],
        "tags": ["Scheme","Security"],
        "url": "/appscan-appstore-database-url-schemes-analysis.html",
        "teaser": null
      },{
        "title": "More than 81% of the top Apps are Native Apps",
        "excerpt":"Since the beginning of this project I have been wondering.  It’s it so important for the end User to use an App that is not developed natively.  For my part, i am too much in love with the Apple ecosystem &amp; Swift.   So I was wondering if we could detect and measure an impact on the choice of technology used to develop the application.   In this study, I decided to focus on Apps rankings, using 10566 Apps scanned by AppScan.   Native is dominiting the Apps development         Native development is far ahead   Globally, without a focus on the top ranked Apps, we detected 75% of native Apps, which is very close to the first 1st article of that blog the 1st article   If we look from the Top 100 to the Top 10, the pourcentage increase at every step.   Finally, if we study only the 401 Top 10 Apps, 81.3% are fully native.   React native at the second place        ReactNative is the number 2.   If we look to the Top 100 to 10, React Native is pretty stable. (is it a sign of maturity?)   Flutter, the challenger?         Flutter is the number 3.   To the Top 100 to 10, Flutter decrease at every step.   Impact of the technology on rank, conclusion   If your goal is to take a seat in the top ranked Apps, developing a native app seems mandatory. ReactNative et Flutter are good challengers.  I forgot to mention Cordova &amp; Xamarin in this study but the numbers are small than Flutter and the correlation pretty similar (less and less pourentage on each steps to the top 10)   But …. how is ranked an App?   While writing this article I had some hesitations…  How does Apple decide to rank an app?  Is it just a fair result?  ","categories": ["AppStore","AppScan","Technology","Native"],
        "tags": [],
        "url": "/appscan-technology-rank-correlation.html",
        "teaser": null
      }]
